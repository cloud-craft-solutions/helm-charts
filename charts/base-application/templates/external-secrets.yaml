# yamllint disable-file
{{- if .Values.externalSecret.enabled }}
{{- $applicationName := include "common.names.fullname" . -}}
{{- $applicationNamespace := include "common.names.namespace" . -}}
{{- $applicationLabels := include "common.labels.standard" . | nindent 4 -}}
{{- range $nameSuffix, $data := .Values.externalSecret.files }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ $applicationName }}
  namespace: {{ $applicationNamespace }}
  labels: {{ $applicationLabels }}
  {{- if $.Values.externalSecret.annotations }}
  annotations:
    {{- toYaml $.Values.externalSecret.annotations | nindent 4 }}
  {{- end }}
spec:
  refreshInterval: {{ $.Values.externalSecret.refreshInterval }}
  secretStoreRef:
    name: {{ default $.Values.externalSecret.secretStore.name ($data.secretStore).name }}
    kind: {{ default $.Values.externalSecret.secretStore.kind ($data.secretStore).kind }}
  target:
    name: {{ $applicationName }}
    template:
      type: {{ $data.type | default "Opaque" }}
      {{- if or $data.annotations $data.labels}}
      metadata:
        {{- if $data.annotations }}
        annotations:
          {{- toYaml $data.annotations | nindent 10 }}
        {{- end }}
        {{- if $data.labels }}
        labels:
          {{- toYaml $data.labels | nindent 10 }}
        {{- end }}
      {{- end }}
  {{- if and (not $data.data) (not $data.dataFrom) }}
  {{- fail (printf "Data or dataFrom not specified for secret %s" (include "common.names.fullname" .)) }}
  {{- end }}
  {{- if $data.data }}
  data:
    {{- range $secretKey, $remoteRef := $data.data }}
    - secretKey: {{ $secretKey }}
      {{- toYaml $remoteRef | nindent 6 }}
    {{- end }}
  {{- end }}
  {{- if $data.dataFrom }}
  dataFrom:
    {{- toYaml $data.dataFrom | nindent 4 }}
  {{- end }}
{{- end }}
{{- end }}
